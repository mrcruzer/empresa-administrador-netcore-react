// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using empresa_administrador_api.Data;

#nullable disable

namespace empresa_administrador_api.Migrations
{
    [DbContext(typeof(EmpresaDbContext))]
    [Migration("20220831201015_add-models")]
    partial class addmodels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("empresa_administrador_api.Models.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("EmploymentStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("JobCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("LicenseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<long>("Nomina")
                        .HasColumnType("bigint");

                    b.Property<int?>("PayGradeId")
                        .HasColumnType("int");

                    b.Property<string>("Posicion")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoNomina")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("EmploymentStatusId");

                    b.HasIndex("JobCategoryId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LicenseId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("PayGradeId");

                    b.HasIndex("SkillId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.EmploymentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("EmploymentStatus");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.JobCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("jobTitles");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Nationality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.PayGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("PayGrades");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Name")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Employee", b =>
                {
                    b.HasOne("empresa_administrador_api.Models.EmploymentStatus", null)
                        .WithMany("Employees")
                        .HasForeignKey("EmploymentStatusId");

                    b.HasOne("empresa_administrador_api.Models.JobCategory", null)
                        .WithMany("Employees")
                        .HasForeignKey("JobCategoryId");

                    b.HasOne("empresa_administrador_api.Models.Language", null)
                        .WithMany("Employees")
                        .HasForeignKey("LanguageId");

                    b.HasOne("empresa_administrador_api.Models.License", null)
                        .WithMany("Employees")
                        .HasForeignKey("LicenseId");

                    b.HasOne("empresa_administrador_api.Models.Nationality", null)
                        .WithMany("Employees")
                        .HasForeignKey("NationalityId");

                    b.HasOne("empresa_administrador_api.Models.PayGrade", null)
                        .WithMany("Employees")
                        .HasForeignKey("PayGradeId");

                    b.HasOne("empresa_administrador_api.Models.Skill", null)
                        .WithMany("Employees")
                        .HasForeignKey("SkillId");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.EmploymentStatus", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.JobCategory", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Language", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.License", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Nationality", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.PayGrade", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("empresa_administrador_api.Models.Skill", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
